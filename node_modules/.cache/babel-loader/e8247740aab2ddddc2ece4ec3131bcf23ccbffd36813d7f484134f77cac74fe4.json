{"ast":null,"code":"import React,{useState}from'react';import QuestionCard from'../QuestionCard/QuestionCard';import FinalScreen from'../FinalScreen/FinalScreen';import questions from'../../questions';import{getSkillLevel}from'../../utils';import{Link}from'react-router-dom';import'./Quiz.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TOTAL_QUESTIONS=questions.length;const Quiz=()=>{const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[score,setScore]=useState(0);const[gameOver,setGameOver]=useState(false);const startQuiz=()=>{setGameOver(false);};const handleAnswerClick=answerIndex=>{const isCorrect=Number(answerIndex)===questions[currentQuestionIndex].correctAnswer;setScore(prevScore=>prevScore+(isCorrect?1:0));setCurrentQuestionIndex(prevIndex=>(prevIndex+1)%TOTAL_QUESTIONS);if(currentQuestionIndex===TOTAL_QUESTIONS-1){setGameOver(true);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"custom-link\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"quiz-travel-quiz\",children:\"Quiz Travel\"})}),!gameOver&&/*#__PURE__*/_jsx(QuestionCard,{questionNumber:currentQuestionIndex+1,totalQuestions:TOTAL_QUESTIONS,question:questions[currentQuestionIndex].question,answers:questions[currentQuestionIndex].answers,onAnswerClick:handleAnswerClick}),gameOver&&/*#__PURE__*/_jsx(FinalScreen,{score:score,skillLevel:getSkillLevel(score),onRestartClick:startQuiz})]});};export default Quiz;","map":{"version":3,"names":["React","useState","QuestionCard","FinalScreen","questions","getSkillLevel","Link","jsx","_jsx","jsxs","_jsxs","TOTAL_QUESTIONS","length","Quiz","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","gameOver","setGameOver","startQuiz","handleAnswerClick","answerIndex","isCorrect","Number","correctAnswer","prevScore","prevIndex","children","to","className","questionNumber","totalQuestions","question","answers","onAnswerClick","skillLevel","onRestartClick"],"sources":["/Users/claudioiaculo/quiz-travel/src/components/Quiz/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuestionCard from '../QuestionCard/QuestionCard';\nimport FinalScreen from '../FinalScreen/FinalScreen';\nimport questions from '../../questions'; \nimport { getSkillLevel } from '../../utils';\nimport { Link } from 'react-router-dom';\nimport './Quiz.css';\n\n\nconst TOTAL_QUESTIONS = questions.length; \n\nconst Quiz: React.FC = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); \n  const [score, setScore] = useState(0); \n  const [gameOver, setGameOver] = useState(false); \n\n  const startQuiz = () => {\n    setGameOver(false); \n  };\n\n  const handleAnswerClick = (answerIndex: number) => {\n    const isCorrect = Number(answerIndex) === questions[currentQuestionIndex].correctAnswer;\n\n    setScore((prevScore) => (prevScore + (isCorrect ? 1 : 0)));\n    setCurrentQuestionIndex((prevIndex) => (prevIndex + 1) % TOTAL_QUESTIONS);\n\n    if (currentQuestionIndex === TOTAL_QUESTIONS - 1) {\n      setGameOver(true); \n    }\n  };\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"custom-link\">\n        <h1 className=\"quiz-travel-quiz\">Quiz Travel</h1>\n      </Link>\n      {!gameOver && (\n        <QuestionCard\n          questionNumber={currentQuestionIndex + 1} \n          totalQuestions={TOTAL_QUESTIONS} \n          question={questions[currentQuestionIndex].question} \n          answers={questions[currentQuestionIndex].answers}\n          onAnswerClick={handleAnswerClick} \n        />\n      )}\n      {gameOver && (\n        <FinalScreen\n          score={score}\n          skillLevel={getSkillLevel(score)}\n          onRestartClick={startQuiz}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAmB,OAAO,CAClD,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CACpD,MAAO,CAAAC,SAAS,KAAM,iBAAiB,CACvC,OAASC,aAAa,KAAQ,aAAa,CAC3C,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGpB,KAAM,CAAAC,eAAe,CAAGP,SAAS,CAACQ,MAAM,CAExC,KAAM,CAAAC,IAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACnE,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACiB,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAE/C,KAAM,CAAAmB,SAAS,CAAGA,CAAA,GAAM,CACtBD,WAAW,CAAC,KAAK,CAAC,CACpB,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAIC,WAAmB,EAAK,CACjD,KAAM,CAAAC,SAAS,CAAGC,MAAM,CAACF,WAAW,CAAC,GAAKlB,SAAS,CAACU,oBAAoB,CAAC,CAACW,aAAa,CAEvFR,QAAQ,CAAES,SAAS,EAAMA,SAAS,EAAIH,SAAS,CAAG,CAAC,CAAG,CAAC,CAAE,CAAC,CAC1DR,uBAAuB,CAAEY,SAAS,EAAK,CAACA,SAAS,CAAG,CAAC,EAAIhB,eAAe,CAAC,CAEzE,GAAIG,oBAAoB,GAAKH,eAAe,CAAG,CAAC,CAAE,CAChDQ,WAAW,CAAC,IAAI,CAAC,CACnB,CACF,CAAC,CAED,mBACET,KAAA,QAAAkB,QAAA,eACEpB,IAAA,CAACF,IAAI,EAACuB,EAAE,CAAC,GAAG,CAACC,SAAS,CAAC,aAAa,CAAAF,QAAA,cAClCpB,IAAA,OAAIsB,SAAS,CAAC,kBAAkB,CAAAF,QAAA,CAAC,aAAW,CAAI,CAAC,CAC7C,CAAC,CACN,CAACV,QAAQ,eACRV,IAAA,CAACN,YAAY,EACX6B,cAAc,CAAEjB,oBAAoB,CAAG,CAAE,CACzCkB,cAAc,CAAErB,eAAgB,CAChCsB,QAAQ,CAAE7B,SAAS,CAACU,oBAAoB,CAAC,CAACmB,QAAS,CACnDC,OAAO,CAAE9B,SAAS,CAACU,oBAAoB,CAAC,CAACoB,OAAQ,CACjDC,aAAa,CAAEd,iBAAkB,CAClC,CACF,CACAH,QAAQ,eACPV,IAAA,CAACL,WAAW,EACVa,KAAK,CAAEA,KAAM,CACboB,UAAU,CAAE/B,aAAa,CAACW,KAAK,CAAE,CACjCqB,cAAc,CAAEjB,SAAU,CAC3B,CACF,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}