{"ast":null,"code":"var _jsxFileName = \"/Users/claudioiaculo/quiz-travel/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionCard from './components/QuestionCard'; // Importa il componente QuestionCard\n\n// Interfaccia per le domande\n\n// Tipi per lo stato del quiz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10; // Numero totale di domande\n\nconst App = () => {\n  _s();\n  // Stato del quiz\n  const [questions, setQuestions] = useState([]);\n  const [quizState, setQuizState] = useState({\n    currentQuestionIndex: 0,\n    score: 0,\n    answers: []\n  });\n\n  // Funzione per caricare le domande\n  const loadQuestions = async () => {\n    const response = await fetch(\"/api/questions\");\n    const data = await response.json();\n    setQuestions(data);\n  };\n\n  // Funzione per gestire la risposta a una domanda\n  const handleAnswerClick = answerIndex => {\n    const isCorrect = answerIndex === questions[quizState.currentQuestionIndex].correctAnswer;\n    setQuizState(prevState => ({\n      ...prevState,\n      answers: [...prevState.answers, answerIndex.toString()],\n      score: isCorrect ? prevState.score + 1 : prevState.score\n    }));\n    if (quizState.currentQuestionIndex === TOTAL_QUESTIONS - 1) {\n      // Mostra la schermata finale\n    } else {\n      // Passa alla prossima domanda\n      setQuizState(prevState => ({\n        ...prevState,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1\n      }));\n    }\n  };\n\n  // Funzione per ottenere il livello di \"skill\" in base al punteggio\n  const getSkillLevel = score => {\n    if (score === 10) {\n      return \"Maestro/a\";\n    } else if (score >= 8) {\n      return \"Esperto/a\";\n    } else if (score >= 4) {\n      return \"Intermedio/a\";\n    } else {\n      return \"Base\";\n    }\n  };\n\n  // Effetto per caricare le domande all'avvio\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  // Schermata iniziale\n  if (!questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Caricamento...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Schermata del quiz\n  const currentQuestion = questions[quizState.currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz sul Turismo Sostenibile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Metti alla prova le tue conoscenze!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n      questionNumber: quizState.currentQuestionIndex + 1 // Numero della domanda\n      ,\n      totalQuestions: TOTAL_QUESTIONS // Numero totale di domande\n      ,\n      question: currentQuestion.question // Testo della domanda\n      ,\n      answers: currentQuestion.answers // Array di risposte\n      ,\n      userAnswer: quizState.answers[quizState.currentQuestionIndex] // Risposta dell'utente\n      ,\n      callback: handleAnswerClick // Funzione da richiamare al click su una risposta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9nVhYBuVIZxv7kNHoeaWK41X4Ck=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuestionCard","jsxDEV","_jsxDEV","TOTAL_QUESTIONS","App","_s","questions","setQuestions","quizState","setQuizState","currentQuestionIndex","score","answers","loadQuestions","response","fetch","data","json","handleAnswerClick","answerIndex","isCorrect","correctAnswer","prevState","toString","getSkillLevel","length","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","questionNumber","totalQuestions","question","userAnswer","callback","_c","$RefreshReg$"],"sources":["/Users/claudioiaculo/quiz-travel/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuestionCard from './components/QuestionCard'; // Importa il componente QuestionCard\n\n// Interfaccia per le domande\ninterface Question {\n  question: string;\n  answers: string[];\n  correctAnswer: string;\n}\n\n// Tipi per lo stato del quiz\ntype QuizState = {\n  currentQuestionIndex: number;\n  score: number;\n  answers: string[];\n};\n\nconst TOTAL_QUESTIONS = 10; // Numero totale di domande\n\nconst App: React.FC = () => {\n  // Stato del quiz\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [quizState, setQuizState] = useState<QuizState>({\n    currentQuestionIndex: 0,\n    score: 0,\n    answers: [],\n  });\n\n  // Funzione per caricare le domande\n  const loadQuestions = async () => {\n    const response = await fetch(\"/api/questions\");\n    const data = await response.json();\n    setQuestions(data);\n  };\n\n  // Funzione per gestire la risposta a una domanda\n  const handleAnswerClick = (answerIndex: number) => {\n    const isCorrect = answerIndex === questions[quizState.currentQuestionIndex].correctAnswer;\n\n    setQuizState((prevState) => ({\n      ...prevState,\n      answers: [...prevState.answers, answerIndex.toString()],\n      score: isCorrect ? prevState.score + 1 : prevState.score,\n    }));\n\n    if (quizState.currentQuestionIndex === TOTAL_QUESTIONS - 1) {\n      // Mostra la schermata finale\n    } else {\n      // Passa alla prossima domanda\n      setQuizState((prevState) => ({\n        ...prevState,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n      }));\n    }\n  };\n\n  // Funzione per ottenere il livello di \"skill\" in base al punteggio\n  const getSkillLevel = (score: number): string => {\n    if (score === 10) {\n      return \"Maestro/a\";\n    } else if (score >= 8) {\n      return \"Esperto/a\";\n    } else if (score >= 4) {\n      return \"Intermedio/a\";\n    } else {\n      return \"Base\";\n    }\n  };\n\n  // Effetto per caricare le domande all'avvio\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  // Schermata iniziale\n  if (!questions.length) {\n    return <div>Caricamento...</div>;\n  }\n\n  // Schermata del quiz\n  const currentQuestion = questions[quizState.currentQuestionIndex];\n\n  return (\n    <div>\n      <h1>Quiz sul Turismo Sostenibile</h1>\n      <p>Metti alla prova le tue conoscenze!</p>\n      <QuestionCard\n        questionNumber={quizState.currentQuestionIndex + 1} // Numero della domanda\n        totalQuestions={TOTAL_QUESTIONS} // Numero totale di domande\n        question={currentQuestion.question} // Testo della domanda\n        answers={currentQuestion.answers} // Array di risposte\n        userAnswer={quizState.answers[quizState.currentQuestionIndex]} // Risposta dell'utente\n        callback={handleAnswerClick} // Funzione da richiamare al click su una risposta\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;;AAEtD;;AAOA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,eAAe,GAAG,EAAE,CAAC,CAAC;;AAE5B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAY;IACpDY,oBAAoB,EAAE,CAAC;IACvBC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;IAC9C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCV,YAAY,CAACS,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAIC,WAAmB,IAAK;IACjD,MAAMC,SAAS,GAAGD,WAAW,KAAKb,SAAS,CAACE,SAAS,CAACE,oBAAoB,CAAC,CAACW,aAAa;IAEzFZ,YAAY,CAAEa,SAAS,KAAM;MAC3B,GAAGA,SAAS;MACZV,OAAO,EAAE,CAAC,GAAGU,SAAS,CAACV,OAAO,EAAEO,WAAW,CAACI,QAAQ,CAAC,CAAC,CAAC;MACvDZ,KAAK,EAAES,SAAS,GAAGE,SAAS,CAACX,KAAK,GAAG,CAAC,GAAGW,SAAS,CAACX;IACrD,CAAC,CAAC,CAAC;IAEH,IAAIH,SAAS,CAACE,oBAAoB,KAAKP,eAAe,GAAG,CAAC,EAAE;MAC1D;IAAA,CACD,MAAM;MACL;MACAM,YAAY,CAAEa,SAAS,KAAM;QAC3B,GAAGA,SAAS;QACZZ,oBAAoB,EAAEY,SAAS,CAACZ,oBAAoB,GAAG;MACzD,CAAC,CAAC,CAAC;IACL;EACF,CAAC;;EAED;EACA,MAAMc,aAAa,GAAIb,KAAa,IAAa;IAC/C,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChB,OAAO,WAAW;IACpB,CAAC,MAAM,IAAIA,KAAK,IAAI,CAAC,EAAE;MACrB,OAAO,WAAW;IACpB,CAAC,MAAM,IAAIA,KAAK,IAAI,CAAC,EAAE;MACrB,OAAO,cAAc;IACvB,CAAC,MAAM;MACL,OAAO,MAAM;IACf;EACF,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACdc,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACP,SAAS,CAACmB,MAAM,EAAE;IACrB,oBAAOvB,OAAA;MAAAwB,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClC;;EAEA;EACA,MAAMC,eAAe,GAAGzB,SAAS,CAACE,SAAS,CAACE,oBAAoB,CAAC;EAEjE,oBACER,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC5B,OAAA;MAAAwB,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1C5B,OAAA,CAACF,YAAY;MACXgC,cAAc,EAAExB,SAAS,CAACE,oBAAoB,GAAG,CAAE,CAAC;MAAA;MACpDuB,cAAc,EAAE9B,eAAgB,CAAC;MAAA;MACjC+B,QAAQ,EAAEH,eAAe,CAACG,QAAS,CAAC;MAAA;MACpCtB,OAAO,EAAEmB,eAAe,CAACnB,OAAQ,CAAC;MAAA;MAClCuB,UAAU,EAAE3B,SAAS,CAACI,OAAO,CAACJ,SAAS,CAACE,oBAAoB,CAAE,CAAC;MAAA;MAC/D0B,QAAQ,EAAElB,iBAAkB,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7EID,GAAa;AAAAiC,EAAA,GAAbjC,GAAa;AA+EnB,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}